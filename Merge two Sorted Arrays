import java.util.*;


public class Solution {
    //BRUTE FORCE
    //TC : O(n1logn)+O(n2logn)+O(n1+n2);
    //Sc : O(n1+n2);
    public static List< Integer > sortedArray(int []arr1, int []arr2) {
        int n=arr1.length;
        int m=arr2.length;
        HashSet <Integer> s=new HashSet<>();
        ArrayList < Integer > Union=new ArrayList<>();
        for (int i = 0; i < n; i++)
            s.add(arr1[i]);
        for (int i = 0; i < m; i++)
            s.add(arr2[i]);
        for (int it: s)
            Union.add(it);
        return Union;
    }
}
/*
//OPTIMISED
//TC : 
//SC : 
public class Solution {
    public static List< Integer > sortedArray(int []a, int []b) {
        ArrayList<Integer> list = new ArrayList<>();
        int i=0;
        int j=0;
        
        while(i<a.length && j<b.length){ //JABTAK DONO MEIN ELEMENTS HAI CONTINUE
            if(a[i]==b[j]){ // IF DONO ARRAY MEIN SAME ELEMENT HAI TOH KISI BHI ARRAY SE LE LO MAKE SURE WO ELEMENT UNION MEIN NA HO
                if(list.size() > 0 && list.get(list.size()-1) != a[i]){ //if list mein jo last element hai wo same array mein element na ho i.e, jo already bhej diye use wapis na bhejo
                    list.add(a[i]);
                } else if (list.size() == 0){
                    list.add(a[i]);
                }
                i++;
                j++;
            }
            else if(a[i] < b[j]){
                if(list.size() > 0 && list.get(list.size()-1) != a[i]){
                    list.add(a[i]);
                } else if (list.size() == 0){
                    list.add(a[i]);
                }
                i++;
            } else {
                if(list.size() > 0 && list.get(list.size()-1) != b[j]){
                    list.add(b[j]);
                } else if (list.size() == 0){
                    list.add(b[j]);
                }
                j++;
            }
    
        }
        
        while(i<a.length){
            if(list.get(list.size()-1) != a[i]){
                list.add(a[i]);
            }
            i++;
        }
        
        while(j<b.length){
            if(list.get(list.size()-1) != b[j]){
                list.add(b[j]);
            }
            j++;
        }

        return list;
        
    }
}
*/
