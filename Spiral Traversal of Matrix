class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<>();

        if (matrix.length == 0) return res;

        int top = 0;
        int bottom = matrix.length -1;
        int left = 0;
        int right = matrix[0].length -1;

        while (left <= right && top <= bottom){
            // go right
            for (int i = left; i <= right; i++) res.add(matrix[top][i]);
            top++;
            // go down
            for (int i = top; i <= bottom; i++) res.add(matrix[i][right]);
            right--;
  
            // go left
            if (top <= bottom) {
            for (int i = right; i >= left; i--) res.add(matrix[bottom][i]);
            bottom--;
            }
            // go up
            if (left <= right) {
            for (int i = bottom; i >= top; i--) res.add(matrix[i][left]);
            left++;
            }
        }
        return res;
    }
}
